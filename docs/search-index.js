var searchIndex = JSON.parse('{\
"rest_tensors":{"doc":"rest_tensors","t":[3,11,11,11,11,12,0,11,11,11,11,0,0,11,11,11,12,11,11,11,0,12,0,12,0,11,11,11,11,11,11,3,5,11,11,5,11,11,11,11,5,11,11,11,11,11,11,12,12,12,12,11,11,12,11,11,11,3,4,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,8,8,13,13,4,8,3,8,13,11,11,11,11,11,11,11,5,11,11,11,11,5,11,11,11,11,11,11,12,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,8,8,8,8,8,8,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Tensors4D","borrow","borrow_mut","clone","clone_into","data","davidson","deref","deref_mut","drop","eq","eri","external_libs","fmt","from","from_subset","indicing","init","into","is_in_subset","matrix","rank","ri","size","tensor_basic_operation","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","DavidsonParams","_qr","borrow","borrow_mut","davidson_solve","default","deref","deref_mut","drop","fill_heff","fmt","from","from_subset","init","into","is_in_subset","lindep","maxcyc","maxspace","nroots","to_subset","to_subset_unchecked","tol","try_from","try_into","type_id","ERIFold4","ERIFormat","ERIFull","Fold4","Fold8","Full","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chrunk_copy","chrunk_copy_transpose_ij","chunk_copy_from_a_full_vector","chunk_copy_from_local_erifull","clone","clone","clone","clone_into","clone_into","clone_into","data","data","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","from_vec","from_vec","from_vec_unchecked","from_vec_unchecked","get","get","get1d","get1d","get1d_mut","get1d_mut","get1d_slice","get1d_slice","get1d_slice_mut","get1d_slice_mut","get2d","get2d_mut","get2d_slice","get2d_slice_mut","get3d","get4d","get4d","get4d_mut","get4d_mut","get4d_mut_uncheck","get4d_slice","get4d_slice","get4d_slice_mut","get4d_slice_mut","get4d_slice_mut_uncheck","get4d_slice_uncheck","get4d_uncheck","get_mut","get_mut","get_reducing_matrix","get_reducing_matrix","get_reducing_matrix_mut","get_reducing_matrix_mut","get_slice","get_slice","get_slice_mut","get_slice_mut","get_slices_mut","index","index_mut","indicing","indicing","init","init","init","into","into","into","is_in_subset","is_in_subset","is_in_subset","new","new","set","set","set1d","set1d","set2d","set4d","set4d","set4d_uncheck","size","size","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","general_dgemm_f","matr_copy","matr_copy_from_ri","ri_ao2mo_f","ri_copy_from_matr","ri_copy_from_ri","special_dgemm_f_01","BasicMatrix","BasicMatrixOpt","Full","Lower","MatFormat","MathMatrix","MatrixFull","ParMathMatrix","Upper","add","add","add","add","add_assign","add_assign","add_assign","basic_check_shape","borrow","borrow","borrow_mut","borrow_mut","check_shape","clone","clone","clone_into","clone_into","copy_from_matr","data","data","data_ref","data_ref","data_ref_mut","data_ref_mut","ddot","deref","deref","deref_mut","deref_mut","div","div_assign","drop","drop","empty","eq","eq","fmt","fmt","formated_output","from","from","from_subset","from_subset","from_vec","from_vec_unchecked","general_check_shape","get","get1d","get1d_mut","get1d_slice","get1d_slice_mut","get2d","get2d_mut","get2d_slice","get2d_slice_mut","get3d_mut","get4d_mut","get_antidiag_terms","get_diagonal_terms","get_diagonal_terms_mut","get_mut","get_slice","get_slice_mut","get_sub_antidiag_terms","get_submatrix","get_submatrix_mut","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","indicing","indicing","indicing","init","init","into","into","into_iter","is_contiguous","is_in_subset","is_in_subset","is_matr","iter","iter_column","iter_column_mut","iter_columns","iter_columns_full","iter_columns_full_mut","iter_columns_mut","iter_diagonal","iter_diagonal_mut","iter_matrixupper","iter_matrixupper_mut","iter_mut","iter_row","iter_row_mut","iter_row_mut_old","iter_row_old","iter_rows","iter_rows_mut","iter_rows_mut_old","iter_rows_old","iter_submatrix","iter_submatrix_mut","iter_submatrix_mut_old","iter_submatrix_old","lapack_dgemm","lapack_inverse","lapack_power","matrix_blas_lapack","matrixconst","matrixfull","matrixfullslice","matrixupper","mul","mul_assign","new","par_add","par_iter_column","par_iter_column_mut","par_iter_columns","par_iter_columns_full","par_iter_columns_full_mut","par_iter_columns_mut","par_scaled_add","par_self_add","par_self_general_add","par_self_multiple","par_self_scaled_add","par_self_sub","par_sub","print_debug","reshape","scaled_add","self_add","self_general_add","self_multiple","self_scaled_add","self_sub","set","set1d","set2d","set3d","set4d","size","size","size","slice","slice_column","slice_column_mut","slice_columns","slice_columns_mut","slice_mut","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","submatrixfull","to_matrixfull","to_matrixfullslice","to_matrixfullslice_columns","to_matrixfullslicemut","to_matrixupper","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","transpose","transpose_and_drop","try_from","try_from","try_into","try_into","type_id","type_id","_dgemm","_dgemm_nn","_dgemm_nn_serial","_dgemm_tn","_dgemm_tn_serial","_dgemm_tn_v02","_dpotrf","_dsyev","_einsum_01","_einsum_02","_einsum_03","_einsum_03_forvec","contract_vxc_0_serial","general_check_shape","DMatrix3x3","DMatrix5x6","DMatrix7x10","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","data","data_ref","data_ref_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_subset","from_subset","from_subset","indicing","indicing","init","init","init","into","into","into","is_contiguous","is_in_subset","is_in_subset","is_in_subset","is_matr","size","size","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","IncreaseStepBy","MatrixUpperStepBy","SubMatrixStepBy","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_iter","into_iter","into_iter","is_in_subset","is_in_subset","is_in_subset","iter","iter","iter","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","new","new","new","next","next","next","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","MatrixFullSlice","MatrixFullSliceMut","SubMatrixFullSlice","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cholesky_decompose_inverse","clone","clone_into","data","data","data","data_ref","data_ref","data_ref","data_ref_mut","data_ref_mut","data_ref_mut","ddot","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","get","get1d","get1d_mut","get1d_slice","get1d_slice_mut","get2d","get2d_mut","get2d_slice","get2d_slice_mut","get_mut","get_slice","get_slice_mut","get_slice_x","indicing","indicing","indicing","indicing","indicing","indicing","init","init","init","into","into","into","is_in_subset","is_in_subset","is_in_subset","iter_columns_full","iter_columns_full","iter_j","iter_mut_columns","iter_mut_j","iter_submatrix_mut","lapack_dgemm","lapack_dgetrf","lapack_dpotrf","lapack_dsyev","lapack_dsyevx","lapack_dtrtri","lapack_inverse","lapack_power","par_iter_columns","par_iter_columns_full","par_iter_mut_j","set","set1d","set2d","size","size","size","size","size","size","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","transpose","transpose_and_drop","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","MatrixFullSliceMut2","MatrixUpper","MatrixUpperSlice","MatrixUpperSliceMut","add","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data","data","data","data","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","empty","eq","eq","eq","eq","fmt","fmt","fmt","fmt","formated_output","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_vec","from_vec_unchecked","get","get","get1d","get1d","get1d_mut","get1d_mut","get1d_slice","get1d_slice","get1d_slice_mut","get1d_slice_mut","get2d","get2d","get2d_mut","get2d_mut","get2d_mut_uncheck","get2d_mut_uncheck","get2d_slice","get2d_slice","get2d_slice_mut","get2d_slice_mut","get2d_slice_mut_uncheck","get2d_slice_mut_uncheck","get2d_slice_uncheck","get2d_slice_uncheck","get2d_uncheck","get2d_uncheck","get_diagonal_terms","get_mut","get_mut","get_slice","get_slice","get_slice_mut","get_slice_mut","index","index_mut","indicing","init","init","init","init","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter_mut_columns_full","lapack_dspevx","lapack_dspgvx","multiple","new","set","set","set1d","set1d","set2d","set2d","set2d_uncheck","set2d_uncheck","size","size","size","size","size","sub","to_matrixfull","to_matrixupperslicemut","to_owned","to_owned","to_slice_mut","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Contiguous","Contiguous","Detached","Detached","SubMatrixFull","SubMatrixFullMut","add","add","add_assign","add_assign","add_assign","borrow","borrow","borrow_mut","borrow_mut","c2d","c2d","data","data","data_ref","data_ref","data_ref_mut","data_ref_mut","deref","deref","deref_mut","deref_mut","div","div_assign","drop","drop","from","from","from_subset","from_subset","indicing","indicing","init","init","into","into","is_contiguous","is_contiguous","is_in_subset","is_in_subset","mul","mul_assign","size","size","sub","sub","sub_assign","sub_assign","sub_assign","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","RIFull","ao2mo","ao2mo_v01","ao2mo_v02","borrow","borrow_mut","check_shape","clone","clone_into","copy_from_matr","copy_from_ri","data","deref","deref_mut","drop","empty","eq","fmt","from","from_subset","from_vec","from_vec_unchecked","get_reducing_matrix","get_reducing_matrix_columns","get_reducing_matrix_mut","get_slices","get_slices_mut","get_slices_mut_v01","get_slices_mut_v02","index","index_mut","indicing","init","into","is_in_subset","iter_auxbas","iter_mut_auxbas","iter_slices_x","new","par_iter_auxbas","par_iter_mut_auxbas","par_iter_slices_x","self_scaled_add","size","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","TensorOpt","TensorOptMut","TensorOptMutUncheck","TensorOptUncheck","TensorSlice","TensorSliceMut","TensorSliceMutUncheck","TensorSliceUncheck","get","get1d","get1d_mut","get1d_slice","get1d_slice_mut","get2d","get2d_mut","get2d_mut_uncheck","get2d_slice","get2d_slice_mut","get2d_slice_mut_uncheck","get2d_slice_uncheck","get2d_uncheck","get3d","get3d_mut","get3d_slice","get3d_slice_mut","get4d","get4d_mut","get4d_mut_uncheck","get4d_slice","get4d_slice_mut","get4d_slice_mut_uncheck","get4d_slice_uncheck","get4d_uncheck","get_mut","get_slice","get_slice_mut","set","set1d","set2d","set2d_uncheck","set3d","set4d","set4d_uncheck"],"q":["rest_tensors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rest_tensors::davidson","","","","","","","","","","","","","","","","","","","","","","","","","","rest_tensors::eri","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rest_tensors::external_libs","","","","","","","rest_tensors::matrixrest_tensors::matrix::matrix_blas_lapack","","","","","","","","","","","","","","rest_tensors::matrix::matrixconst","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rest_tensors::matrix::matrixfull","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rest_tensors::matrix::matrixfullslice","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rest_tensors::matrix::matrixupper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rest_tensors::matrix::submatrixfull","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rest_tensors::matrix::submatrixfull::SubMatrixFull","","rest_tensors::matrix::submatrixfull::SubMatrixFullMut","","rest_tensors::ri","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rest_tensors::tensor_basic_operation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Coloum-major Tensors with the rank of 4 at most, designed …","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Establish especially for the tensor generation of …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Coloum-major 4-D ERI designed for quantum chemistry …","Coloum-major 4-D ERI designed for quantum chemistry …","","","","","","","","","","","","","","","","","","","an efficient and general dgemm wrapped to a fortran source","from matr_a[(range_row_b, range_column_b)] to matr_b[…","copy data from ri_a to matr_b","","copy data from matr_a to RI_b","copy data from ri_a to ri_b","","","","","","","","<strong>MatrixFull</strong> is a <code>column-major</code> 2D array designed for quantum …","","","","","","","","","","","","","","","","","","","","","","the data stored in the <code>Vec</code> struct","","","","","","","","","","","","","","initialize an empty MatrixFull entity","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Collect the reference of diagonal terms as a vector","","","","","","","","","","","","","","","","refer to the slice with a given ","","","","","`matr_a.indicing()’ return &amp;matr_a.indicing;","indicing is defined to facilitate the element nevigation, …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","by default, the matrix should be contiguous, unless …","","","","","","","","","","","","","","","","","","","","","","","","<code>iter_submatrix</code> provides a home-made submatrix StepBy …","","<code>iter_submatrix_mut</code> provides a flatten iterator for the …","","","","","","","","","","","","generate a new MatrixFull entity, where all elemental …","Parallel version for C = A + B,","","","","","","","Parallel version for C = A + c*B,","Parallel version for A + B -&gt; A","Parallel version for a<em>A + b</em>B -&gt; A","Parallel version for a*A -&gt; A","Parallel version for A + b*B -&gt; A","Parallel version for A - B -&gt; A","Parallel version for A - B -&gt; C","","reshape the matrix without change the data and its ordering","","For A += B","For a<em>A + b</em>B -&gt; A","For a*A -&gt; A","For A += c*B where c is a scale factor","For A - B -&gt; A","","","","","","","`matr_a.size()’ return &amp;matr_a.size;","the number of row and column, column major","","","","","","","For A - B -&gt; C","","","","","","","","","","","","","","","","","","","Transpose the matrix: A -&gt; A^{T}","Transpose the matrix: A -&gt; A^{T}","","","","","","","an efficient dgemm manipulation for the matrices equipped …","","","","","","computes the Cholesky factorization of a real symmetric …","computes all eigenvalues and , optionally, eigenvectors of …","","","","","An matrix operation for the Vxc preparation: Contraction …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","`matr_a.indicing()’ return &amp;matr_a.indicing;","`matr_a.indicing()’ return &amp;matr_a.indicing;","`matr_a.indicing()’ return &amp;matr_a.indicing;","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","`matr_a.size()’ return &amp;matr_a.size;","`matr_a.size()’ return &amp;matr_a.size;","`matr_a.size()’ return &amp;matr_a.size;","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","`matr_a.indicing()’ return &amp;matr_a.indicing;","`matr_a.indicing()’ return &amp;matr_a.indicing;","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","`matr_a.size()’ return &amp;matr_a.size;","`matr_a.size()’ return &amp;matr_a.size;","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Coloum-major 4-D ERI designed for quantum chemistry …","","","","","","","Trait definitions for tensor basic operations, mainly …","","","","","","Define for upper-formated tensors specifically, like  …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"if":[0,[[]],[[]],[[[2,[1,1]]],[[2,[1,1]]]],[[]],0,0,[3],[3],[3],[[[2,[4,4]],2],5],0,0,[[[2,[6,6]],7],8],[[]],[[]],0,[[],3],[[]],[[],5],0,0,0,0,0,[[]],[[],9],[[]],[[],10],[[],10],[[],11],0,[[12,13]],[[]],[[]],[[[15,[14]],12,12,16,3]],[[],16],[3],[3],[3],[[17,12,12,3,5],[[17,[13]]]],[[16,7],8],[[]],[[]],[[],3],[[]],[[],5],0,0,0,0,[[],9],[[]],0,[[],10],[[],10],[[],11],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[[0,[1,18,19,20]]]],[12,[[0,[1,18,19,20]]]]]],[[[21,[[0,[1,18,19,20]]]],[12,[[0,[1,18,19,20]]]]]],[[[22,[13]],[12,[13]]]],[[[22,[[0,[1,18]]]],3,[23,[3]],[23,[3]],[23,[3]],[23,[3]],[12,[[0,[1,18]]]]]],[24,24],[[[21,[1]]],[[21,[1]]]],[[[22,[1]]],[[22,[1]]]],[[]],[[]],[[]],0,0,[3],[3],[3],[3],[3],[3],[3],[3],[3],[[24,24],5],[[[21,[4]],21],5],[[[22,[4]],22],5],[[24,7],8],[[[21,[6]],7],8],[[[22,[6]],7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[[0,[1,18,19,20]]]]],[[9,[[21,[[0,[1,18,19,20]]]]]]]],[[[12,[[0,[1,18]]]]],[[9,[[22,[[0,[1,18]]]]]]]],[[[12,[[0,[1,18,19,20]]]]],[[21,[[0,[1,18,19,20]]]]]],[[[12,[[0,[1,18]]]]],[[22,[[0,[1,18]]]]]],[21,9],[22,9],[[21,3],9],[[22,3],9],[[21,3],9],[[22,3],9],[[21,3,3],9],[[22,3,3],9],[[21,3,3],9],[[22,3,3],9],[22,9],[22,9],[[22,3],9],[[22,3],9],[22,9],[21,9],[22,9],[21,9],[22,9],[22,9],[[21,3],9],[[22,3],9],[[21,3],9],[[22,3],9],[[22,3],9],[[22,3],9],[22,9],[21,9],[22,9],[[[21,[[0,[1,18,19,20]]]]],[[25,[[0,[1,18,19,20]]]]]],[[[22,[[0,[1,18]]]],3],[[26,[[0,[1,18]]]]]],[[[21,[[0,[1,18,19,20]]]]],[[27,[[0,[1,18,19,20]]]]]],[[[22,[[0,[1,18]]]],3],[[28,[[0,[1,18]]]]]],[[21,3],9],[[22,3],9],[[21,3],9],[[22,3],9],[[[22,[[0,[1,18]]]],3,[23,[3]],[23,[3]],[23,[3]],[23,[3]]],[[30,[29]]]],[22],[22],0,0,[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[[0,[1,18,19,20]]],[[21,[[0,[1,18,19,20]]]]]],[[[0,[1,18]]],[[22,[[0,[1,18]]]]]],[21],[22],[[21,3]],[[22,3]],[22],[21],[22],[22],0,0,[[]],[[]],[[]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[[23,[3]],[23,[3]],31,[23,[3]],[23,[3]],31,[23,[3]],[23,[3]],13,13]],[[[23,[3]],[23,[3]],[23,[3]],[23,[3]]]],[[[23,[3]],[23,[3]],3,3,[23,[3]],[23,[3]]]],[[3,3,3]],[[[23,[3]],[23,[3]],[23,[3]],[23,[3]],3,32]],[[[23,[3]],[23,[3]],[23,[3]],[23,[3]],[23,[3]],[23,[3]]]],[[[23,[3]],3,[23,[3]],[23,[3]],[23,[3]],13,13]],0,0,0,0,0,0,0,0,0,[[],[[9,[17]]]],[[[17,[[0,[33,1,34,35]]]],[36,[[0,[33,1,34,35]]]]],[[17,[[0,[33,1,34,35]]]]]],[[[17,[[0,[1,34,35]]]],[0,[1,34,35]]],[[17,[[0,[1,34,35]]]]]],[[[17,[[0,[1,34,35]]]],[17,[[0,[1,34,35]]]]],[[17,[[0,[1,34,35]]]]]],[[[17,[[0,[33,1,34,35]]]],[36,[[0,[33,1,34,35]]]]]],[[[17,[[0,[1,34,35]]]],[0,[1,34,35]]]],[[[17,[[0,[1,34,35]]]],[17,[[0,[1,34,35]]]]]],[[],5],[[]],[[]],[[]],[[]],[[],5],[[[17,[1]]],[[17,[1]]]],[37,37],[[]],[[]],[[[17,[13]],[23,[3]],[23,[3]],[23,[3]],[23,[3]]]],[17,12],0,[[],9],[17,9],[[],9],[17,9],[[[17,[13]],17],[[9,[[17,[13]]]]]],[3],[3],[3],[3],[[[17,[[0,[1,38,39]]]],[0,[1,38,39]]],[[17,[[0,[1,38,39]]]]]],[[[17,[[0,[1,38,39]]]],[0,[1,38,39]]]],[3],[3],[[],17],[[[17,[4]],17],5],[[37,37],5],[[[17,[6]],7],8],[[37,7],8],[[[17,[13]],3,40]],[[]],[[]],[[]],[[]],[12,[[9,[17]]]],[12,17],[[31,31],5],[17,9],[[17,3],9],[[17,3],9],[[17,3,3],9],[[17,3,3],9],[17,9],[17,9],[[17,3],9],[[17,3],9],[17,9],[17,9],[17,[[9,[12]]]],[[[17,[[0,[33,1]]]]],[[9,[12]]]],[[[17,[[0,[33,1]]]]],[[9,[12]]]],[17,9],[[17,3],9],[[17,3],9],[[17,3],[[9,[12]]]],[[17,[23,[3]],[23,[3]]],36],[[17,[23,[3]],[23,[3]]],41],[17],[17],[17],[[17,3]],[17],[17],[17],[17],[[17,3]],[17],[17],[17],[[]],[17],0,[[],3],[[],3],[[]],[[]],[17],[[],5],[[],5],[[],5],[[],5],[17,42],[[17,3],42],[[17,3],43],[[17,[23,[3]]],44],[17,44],[17,45],[[17,[23,[3]]],45],[17,[[9,[[46,[42]]]]]],[17,[[9,[[46,[43]]]]]],[17,[[9,[[47,[42]]]]]],[17,[[9,[[47,[43]]]]]],[17,43],[[17,3],[[46,[42]]]],[[17,3],[[46,[43]]]],[[17,3],[[30,[29]]]],[[17,3],[[30,[29]]]],[[17,[23,[3]]],[[48,[42]]]],[[17,[23,[3]]],[[48,[43]]]],[[17,[23,[3]]],[[30,[29]]]],[[17,[23,[3]]],[[30,[29]]]],[[17,[23,[3]],[23,[3]]],[[48,[42]]]],[[17,[23,[3]],[23,[3]]],[[48,[43]]]],[[17,[23,[3]],[23,[3]]],[[30,[29]]]],[[17,[23,[3]],[23,[3]]],[[30,[29]]]],[[[17,[13]],17,17,31,31,13,13]],[[[17,[13]]],[[9,[[17,[13]]]]]],[[[17,[13]],13,13],[[9,[[17,[13]]]]]],0,0,0,0,0,[[[17,[[0,[1,49,50]]]],[0,[1,49,50]]],[[17,[[0,[1,49,50]]]]]],[[[17,[[0,[1,49,50]]]],[0,[1,49,50]]]],[[],17],[[],[[9,[17]]]],[[[17,[[0,[33,1,19,20,51]]]],3],[[52,[[0,[33,1,19,20,51]]]]]],[[[17,[[0,[33,1,19,20,51]]]],3],[[53,[[0,[33,1,19,20,51]]]]]],[[[17,[[0,[33,1,19,20,51]]]],[23,[3]]],[[9,[[54,[[0,[33,1,19,20,51]]]]]]]],[[[17,[[0,[33,1,19,20,51]]]]],[[54,[[0,[33,1,19,20,51]]]]]],[[[17,[[0,[33,1,19,20,51]]]]],[[55,[[0,[33,1,19,20,51]]]]]],[[[17,[[0,[33,1,19,20,51]]]],[23,[3]]],[[9,[[55,[[0,[33,1,19,20,51]]]]]]]],[[],[[9,[17]]]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[17]]]],[[[17,[13]],[23,[3]],[23,[3]]]],[17],[[],[[9,[17]]]],[[]],[[]],[[]],[[]],[[]],[17],[[17,3]],[17],[17],[17],[[]],[17],0,[17],[[17,3]],[[17,3]],[[17,[23,[3]]]],[[17,[23,[3]]]],[17],[[],[[9,[17]]]],[[[17,[[0,[1,56,57]]]],[0,[1,56,57]]],[[17,[[0,[1,56,57]]]]]],[[[17,[[0,[1,56,57]]]],[17,[[0,[1,56,57]]]]],[[17,[[0,[1,56,57]]]]]],[[[17,[[0,[33,1,56,57]]]],[36,[[0,[33,1,56,57]]]]],[[17,[[0,[33,1,56,57]]]]]],[[[17,[[0,[1,56,57]]]],[17,[[0,[1,56,57]]]]]],[[[17,[[0,[1,56,57]]]],[0,[1,56,57]]]],[[[17,[[0,[33,1,56,57]]]],[36,[[0,[33,1,56,57]]]]]],0,[[],[[9,[17]]]],[[[17,[[0,[33,1]]]]],[[25,[[0,[33,1]]]]]],[[[17,[[0,[33,1]]]],[23,[3]]],[[58,[[0,[33,1]]]]]],[[[17,[[0,[33,1]]]]],[[27,[[0,[33,1]]]]]],[[[17,[[0,[33,1]]]]],[[59,[[0,[33,1]]]]]],[[]],[[]],[[],9],[[],9],[[]],[[]],[[[17,[[0,[33,1]]]]],[[17,[[0,[33,1]]]]]],[[[17,[[0,[33,1]]]]],[[17,[[0,[33,1]]]]]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[31,31,13,13]],[[25,25],[[17,[13]]]],[[25,25],[[17,[13]]]],[[25,25],[[17,[13]]]],[[25,25],[[17,[13]]]],[[25,25,[30,[29]]]],[31],[31],[25,[[17,[13]]]],[[25,25],[[12,[13]]]],[[],[[17,[13]]]],[[12,12],[[17,[13]]]],[[[9,[13]]]],[[31,31],5],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[60,9],[60,9],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[]],[60],0,[[],3],[[],3],[[],3],[[]],[[]],[[]],[60,5],[[],5],[[],5],[[],5],[60,5],[60],0,[[],9],[[],9],[[],9],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,3],61],[[[23,[3]],[23,[3]]],48],[[],47],[61,9],[48,9],[47,9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[27,[13]],31],[[9,[[17,[13]]]]]],[[[25,[1]]],[[25,[1]]]],[[]],0,0,0,[27,9],[25,9],[58,9],[27,9],[25,9],[58,9],[[[25,[13]],25],[[9,[[17,[13]]]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[[27,[4]],27],5],[[[25,[4]],25],5],[[[58,[4]],58],5],[[[27,[6]],7],8],[[[25,[6]],7],8],[[[58,[6]],7],8],[[]],[[]],[[]],[[]],[[]],[[]],[25,9],[[25,3],9],[[27,3],9],[[25,3,3],9],[[27,3,3],9],[25,9],[27,9],[[25,3],9],[[27,3],9],[27,9],[[25,3],9],[[27,3],9],[[[25,[[0,[33,1,18,19,20]]]],3]],[27],[25],[58],0,0,0,[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[[27,[[0,[33,1,18,19,20]]]]],[[44,[[0,[33,1,18,19,20]]]]]],[[[25,[[0,[33,1,18,19,20]]]]],[[44,[[0,[33,1,18,19,20]]]]]],[[[25,[[0,[33,1,18,19,20]]]],3],[[42,[[0,[33,1,18,19,20]]]]]],[[[27,[[0,[33,1,18,19,20]]]],[23,[3]]],[[9,[[45,[[0,[33,1,18,19,20]]]]]]]],[[[27,[[0,[33,1,18,19,20]]]],3],[[43,[[0,[33,1,18,19,20]]]]]],[[[27,[[0,[33,1,18,19,20]]]],[23,[3]],[23,[3]]],[[30,[29]]]],[[[27,[13]],25,25,31,31,13,13]],[[[27,[13]]],[[9,[[17,[13]]]]]],[[[27,[13]],62]],[[[27,[13]]],9],[[[27,[13]]],9],[[[27,[13]],62]],[[[27,[13]]],[[9,[[17,[13]]]]]],[[[27,[13]],13,13],[[9,[[17,[13]]]]]],[[[25,[[0,[33,1,18,19,20]]]],[23,[3]]],[[9,[[54,[[0,[33,1,18,19,20]]]]]]]],[[[25,[[0,[33,1,18,19,20]]]]],[[54,[[0,[33,1,18,19,20]]]]]],[[[27,[[0,[33,1,18,19,20]]]],3],[[53,[[0,[33,1,18,19,20]]]]]],[27],[[27,3]],[27],[27],[25],[58],0,0,0,[[]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[25,[[0,[33,1,18,19,20]]]]],[[17,[[0,[33,1,18,19,20]]]]]],[[[25,[[0,[33,1,18,19,20]]]]],[[17,[[0,[33,1,18,19,20]]]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],0,0,0,0,[[[59,[[0,[33,1,18,19,20,34,35]]]],[59,[[0,[33,1,18,19,20,34,35]]]]],[[59,[[0,[33,1,18,19,20,34,35]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[59,[1]]],[[59,[1]]]],[[[26,[1]]],[[26,[1]]]],[[]],[[]],0,0,0,0,[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[],59],[[[59,[4]],59],5],[[[28,[4]],28],5],[[[26,[4]],26],5],[[[63,[4]],63],5],[[[59,[6]],7],8],[[[28,[6]],7],8],[[[26,[6]],7],8],[[[63,[6]],7],8],[[[59,[13]],3,40]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,12],[[9,[59]]]],[[3,12],59],[59,9],[26,9],[[59,3],9],[[26,3],9],[[59,3],9],[[28,3],9],[[59,3,3],9],[[26,3,3],9],[[59,3,3],9],[[28,3,3],9],[59,9],[26,9],[59,9],[28,9],[59,9],[28,9],[[59,3],9],[[26,3],9],[[59,3],9],[[28,3],9],[[59,3],9],[[28,3],9],[[59,3],9],[[26,3],9],[59,9],[26,9],[59,[[9,[12]]]],[59,9],[28,9],[[59,3],9],[[26,3],9],[[59,3],9],[[28,3],9],[[59,64]],[[59,64]],0,[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[63,45],[[[28,[13]]],9],[[[28,[13]],[28,[13]],3],9],[[[28,[13]],13]],[[3,[0,[33,1]]],[[59,[[0,[33,1]]]]]],[59],[28],[[59,3]],[[28,3]],[59],[28],[59],[28],[59],0,0,0,0,[[[59,[[0,[1,18,19,20,56,57]]]],[59,[[0,[1,18,19,20,56,57]]]]],[[59,[[0,[1,18,19,20,56,57]]]]]],[[[59,[[0,[33,1]]]]],[[9,[[17,[[0,[33,1]]]]]]]],[59,28],[[]],[[]],[59],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],0,0,0,0,0,0,[[[36,[[0,[33,1,34,35]]]],[0,[33,1,34,35]]],[[17,[[0,[33,1,34,35]]]]]],[[[36,[[0,[33,1,34,35]]]],[17,[[0,[33,1,34,35]]]]],[[17,[[0,[33,1,34,35]]]]]],[[[41,[[0,[1,34,35]]]],[17,[[0,[1,34,35]]]]]],[[[41,[[0,[33,1,34,35]]]],[36,[[0,[33,1,34,35]]]]]],[[[41,[[0,[33,1,34,35]]]],[0,[33,1,34,35]]]],[[]],[[]],[[]],[[]],[[[36,[[0,[33,1]]]]],[[36,[[0,[33,1]]]]]],[[[41,[[0,[33,1]]]]],[[41,[[0,[33,1]]]]]],[[[36,[[0,[33,1]]]]],[[12,[[0,[33,1]]]]]],[[[41,[[0,[33,1]]]]],[[12,[[0,[33,1]]]]]],[[[36,[[0,[33,1]]]]],9],[41,9],[[[36,[[0,[33,1]]]]],9],[41,9],[3],[3],[3],[3],[[[36,[[0,[33,1,38,39]]]],[0,[33,1,38,39]]],[[17,[[0,[33,1,38,39]]]]]],[[[41,[[0,[1,38,39]]]],[0,[1,38,39]]]],[3],[3],[[]],[[]],[[]],[[]],[[[36,[[0,[33,1]]]]]],[41],[[],3],[[],3],[[]],[[]],[[[36,[[0,[33,1]]]]],5],[41,5],[[],5],[[],5],[[[36,[[0,[33,1,49,50]]]],[0,[33,1,49,50]]],[[17,[[0,[33,1,49,50]]]]]],[[[41,[[0,[1,49,50]]]],[0,[1,49,50]]]],[[[36,[[0,[33,1]]]]]],[41],[[[36,[[0,[33,1,56,57]]]],[0,[33,1,56,57]]],[[17,[[0,[33,1,56,57]]]]]],[[[36,[[0,[33,1,56,57]]]],[17,[[0,[33,1,56,57]]]]],[[17,[[0,[33,1,56,57]]]]]],[[[41,[[0,[33,1,56,57]]]],[36,[[0,[33,1,56,57]]]]]],[[[41,[[0,[1,56,57]]]],[17,[[0,[1,56,57]]]]]],[[[41,[[0,[1,56,57]]]],[0,[1,56,57]]]],[[],9],[[],9],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],0,0,0,0,0,[[[65,[13]],17],[[66,[[65,[13]]]]]],[[[65,[13]],17],[[66,[[65,[13]]]]]],[[[65,[13]],17],[[66,[[65,[13]]]]]],[[]],[[]],[[[65,[[0,[1,18,19,20]]]],65],5],[[[65,[1]]],[[65,[1]]]],[[]],[[[65,[13]],[23,[3]],[23,[3]],3,32,[23,[3]],[23,[3]]]],[[[65,[13]],[23,[3]],[23,[3]],[23,[3]],65,[23,[3]],[23,[3]],[23,[3]]]],0,[3],[3],[3],[[],[[65,[[0,[1,18,19,20]]]]]],[[[65,[4]],65],5],[[[65,[6]],7],8],[[]],[[]],[[[12,[[0,[1,18,19,20]]]]],[[9,[[65,[[0,[1,18,19,20]]]]]]]],[[[12,[[0,[1,18,19,20]]]]],[[65,[[0,[1,18,19,20]]]]]],[[[65,[[0,[1,18,19,20]]]],3],[[9,[[25,[[0,[1,18,19,20]]]]]]]],[[[65,[[0,[1,18,19,20]]]],[23,[3]],3],[[9,[[58,[[0,[1,18,19,20]]]]]]]],[[[65,[[0,[1,18,19,20]]]],3],[[9,[[27,[[0,[1,18,19,20]]]]]]]],[[[65,[[0,[1,18,19,20]]]],[23,[3]],[23,[3]],[23,[3]]],[[30,[29]]]],[[[65,[[0,[1,18,19,20]]]],[23,[3]],[23,[3]],[23,[3]]],[[30,[29]]]],[[[65,[[0,[1,18,19,20]]]],[23,[3]],[23,[3]],[23,[3]]],[[30,[29]]]],[[[65,[[0,[1,18,19,20]]]],[23,[3]],[23,[3]],[23,[3]]],[[30,[29]]]],[65],[65],0,[[],3],[[]],[[],5],[[[65,[[0,[1,18,19,20]]]],[23,[3]]],[[9,[[44,[[0,[1,18,19,20]]]]]]]],[[[65,[[0,[1,18,19,20]]]],[23,[3]]],[[9,[[45,[[0,[1,18,19,20]]]]]]]],[[[65,[[0,[1,18,19,20]]]],3,3],[[42,[[0,[1,18,19,20]]]]]],[[[0,[1,18,19,20]]],[[65,[[0,[1,18,19,20]]]]]],[[[65,[[0,[1,18,19,20]]]],[23,[3]]],[[9,[[54,[[0,[1,18,19,20]]]]]]]],[[[65,[[0,[1,18,19,20]]]],[23,[3]]],[[9,[[55,[[0,[1,18,19,20]]]]]]]],[[[65,[[0,[1,18,19,20]]]],3,3],[[52,[[0,[1,18,19,20]]]]]],[[[65,[13]],65,13]],0,[[]],[[],9],[[]],[[],10],[[],10],[[],11],0,0,0,0,0,0,0,0,[[],9],[3,9],[3,9],[[3,3],9],[[3,3],9],[[],9],[[],9],[[],9],[3,9],[3,9],[3,9],[3,9],[[],9],[[],9],[[],9],[3,9],[3,9],[[],9],[[],9],[[],9],[3,9],[3,9],[3,9],[3,9],[[],9],[[],9],[3,9],[3,9],[[]],[3],[[]],[[]],[[]],[[]],[[]]],"p":[[8,"Clone"],[3,"Tensors4D"],[15,"usize"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"Vec"],[15,"f64"],[8,"FnMut"],[3,"Box"],[3,"DavidsonParams"],[3,"MatrixFull"],[8,"Display"],[8,"Send"],[8,"Sync"],[3,"ERIFull"],[3,"ERIFold4"],[3,"Range"],[4,"ERIFormat"],[3,"MatrixFullSlice"],[3,"MatrixUpperSlice"],[3,"MatrixFullSliceMut"],[3,"MatrixUpperSliceMut"],[3,"IntoIter"],[3,"Flatten"],[15,"char"],[15,"i32"],[8,"Copy"],[8,"Add"],[8,"AddAssign"],[4,"SubMatrixFull"],[4,"MatFormat"],[8,"Div"],[8,"DivAssign"],[15,"str"],[4,"SubMatrixFullMut"],[3,"Iter"],[3,"IterMut"],[3,"ChunksExact"],[3,"ChunksExactMut"],[3,"StepBy"],[3,"MatrixUpperStepBy"],[3,"SubMatrixStepBy"],[8,"Mul"],[8,"MulAssign"],[8,"Sized"],[3,"Iter"],[3,"IterMut"],[3,"ChunksExact"],[3,"ChunksExactMut"],[8,"Sub"],[8,"SubAssign"],[3,"SubMatrixFullSlice"],[3,"MatrixUpper"],[3,"DMatrix3x3"],[3,"IncreaseStepBy"],[15,"u8"],[3,"MatrixFullSliceMut2"],[8,"SliceIndex"],[3,"RIFull"],[6,"Result"],[8,"MathMatrix"],[8,"BasicMatrix"],[8,"ParMathMatrix"],[8,"BasicMatrixOpt"],[3,"DMatrix5x6"],[3,"DMatrix7x10"],[13,"Contiguous"],[13,"Detached"],[13,"Contiguous"],[13,"Detached"],[8,"TensorOpt"],[8,"TensorOptMut"],[8,"TensorSlice"],[8,"TensorSliceMut"],[8,"TensorOptMutUncheck"],[8,"TensorSliceMutUncheck"],[8,"TensorSliceUncheck"],[8,"TensorOptUncheck"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
